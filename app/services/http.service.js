"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var Observable_1 = require("rxjs/Observable");
require("rxjs/add/operator/map");
require("rxjs/add/operator/catch");
require("rxjs/add/observable/throw");
require("rxjs/add/operator/finally");
var WeatherCondition_1 = require("../models/WeatherCondition");
var Condition_1 = require("../models/Condition");
var HttpService = (function () {
    function HttpService(http) {
        this.http = http;
        this.key = "aa3285e74b824f26bab195813171506";
        this.headers = new http_1.Headers({ "Content-Type": "application/json" });
        this.options = new http_1.RequestOptions({ headers: this.headers });
    }
    HttpService.prototype.getCurrentWeather = function (lat, lng) {
        var query = lat + "," + lng;
        var currentUrl = "http://api.apixu.com/v1/current.json?key=" + this.key + "&q=" + query;
        return this.http.get(currentUrl, this.options)
            .map(function (res) { return res.json(); })
            .map(function (data) {
            var current = data.current;
            var condition = data.current.condition;
            return new WeatherCondition_1.WeatherCondition(current.last_updated, current.temp_c, current.temp_f, current.wind_kph, current.wind_dir, current.pressure_mb, current.humidity, current.feelslike_c, current.feelslike_f, new Condition_1.Condition(condition.text, condition.icon, condition.code));
        })
            .catch(this.handleErrors);
    };
    HttpService.prototype.handleErrors = function (error) {
        console.log(JSON.stringify(error));
        return Observable_1.Observable.throw(error);
    };
    return HttpService;
}());
HttpService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], HttpService);
exports.HttpService = HttpService;
/*
https://www.apixu.com/my/
http://api.apixu.com/v1/current.json?key=aa3285e74b824f26bab195813171506&q=50,30
http://api.apixu.com/v1/history.json?key=aa3285e74b824f26bab195813171506&q=50,30&dt=2017-06-15
 */
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaHR0cC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLHNDQUF3RTtBQUV4RSw4Q0FBNkM7QUFDN0MsaUNBQStCO0FBQy9CLG1DQUFpQztBQUNqQyxxQ0FBbUM7QUFDbkMscUNBQW1DO0FBRW5DLCtEQUE4RDtBQUM5RCxpREFBZ0Q7QUFHaEQsSUFBYSxXQUFXO0lBTXZCLHFCQUFvQixJQUFVO1FBQVYsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUw5QixRQUFHLEdBQVcsaUNBQWlDLENBQUM7UUFFeEMsWUFBTyxHQUFHLElBQUksY0FBTyxDQUFDLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFDLENBQUMsQ0FBQztRQUM3RCxZQUFPLEdBQUcsSUFBSSxxQkFBYyxDQUFDLEVBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDO0lBRTdCLENBQUM7SUFFbEMsdUNBQWlCLEdBQWpCLFVBQWtCLEdBQVcsRUFBRSxHQUFXO1FBQ3pDLElBQU0sS0FBSyxHQUFjLEdBQUcsU0FBSSxHQUFLLENBQUM7UUFDdEMsSUFBTSxVQUFVLEdBQVcsOENBQTRDLElBQUksQ0FBQyxHQUFHLFdBQU0sS0FBTyxDQUFDO1FBRTdGLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQzthQUM1QyxHQUFHLENBQUMsVUFBQyxHQUFhLElBQUssT0FBQSxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQVYsQ0FBVSxDQUFDO2FBQ2xDLEdBQUcsQ0FBQyxVQUFBLElBQUk7WUFDUixJQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQzdCLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1lBRXpDLE1BQU0sQ0FBQyxJQUFJLG1DQUFnQixDQUMxQixPQUFPLENBQUMsWUFBWSxFQUNwQixPQUFPLENBQUMsTUFBTSxFQUNkLE9BQU8sQ0FBQyxNQUFNLEVBQ2QsT0FBTyxDQUFDLFFBQVEsRUFDaEIsT0FBTyxDQUFDLFFBQVEsRUFDaEIsT0FBTyxDQUFDLFdBQVcsRUFDbkIsT0FBTyxDQUFDLFFBQVEsRUFDaEIsT0FBTyxDQUFDLFdBQVcsRUFDbkIsT0FBTyxDQUFDLFdBQVcsRUFDbkIsSUFBSSxxQkFBUyxDQUNaLFNBQVMsQ0FBQyxJQUFJLEVBQ2QsU0FBUyxDQUFDLElBQUksRUFDZCxTQUFTLENBQUMsSUFBSSxDQUNkLENBQ0QsQ0FBQztRQUNILENBQUMsQ0FBQzthQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVPLGtDQUFZLEdBQXBCLFVBQXFCLEtBQWU7UUFDbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFbkMsTUFBTSxDQUFDLHVCQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFDRixrQkFBQztBQUFELENBQUMsQUEzQ0QsSUEyQ0M7QUEzQ1ksV0FBVztJQUR2QixpQkFBVSxFQUFFO3FDQU9jLFdBQUk7R0FObEIsV0FBVyxDQTJDdkI7QUEzQ1ksa0NBQVc7QUE4Q3hCOzs7O0dBSUciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgSHR0cCwgSGVhZGVycywgUmVzcG9uc2UsIFJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIkBhbmd1bGFyL2h0dHBcIjtcclxuXHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcbmltcG9ydCBcInJ4anMvYWRkL29wZXJhdG9yL21hcFwiO1xyXG5pbXBvcnQgXCJyeGpzL2FkZC9vcGVyYXRvci9jYXRjaFwiO1xyXG5pbXBvcnQgXCJyeGpzL2FkZC9vYnNlcnZhYmxlL3Rocm93XCI7XHJcbmltcG9ydCBcInJ4anMvYWRkL29wZXJhdG9yL2ZpbmFsbHlcIjtcclxuXHJcbmltcG9ydCB7IFdlYXRoZXJDb25kaXRpb24gfSBmcm9tIFwiLi4vbW9kZWxzL1dlYXRoZXJDb25kaXRpb25cIjtcclxuaW1wb3J0IHsgQ29uZGl0aW9uIH0gZnJvbSBcIi4uL21vZGVscy9Db25kaXRpb25cIjtcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEh0dHBTZXJ2aWNlIHtcclxuXHRrZXk6IHN0cmluZyA9IFwiYWEzMjg1ZTc0YjgyNGYyNmJhYjE5NTgxMzE3MTUwNlwiO1xyXG5cclxuXHRwcml2YXRlIGhlYWRlcnMgPSBuZXcgSGVhZGVycyh7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwifSk7XHJcblx0cHJpdmF0ZSBvcHRpb25zID0gbmV3IFJlcXVlc3RPcHRpb25zKHtoZWFkZXJzOiB0aGlzLmhlYWRlcnN9KTtcclxuXHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwKSB7fVxyXG5cclxuXHRnZXRDdXJyZW50V2VhdGhlcihsYXQ6IG51bWJlciwgbG5nOiBudW1iZXIpOiBPYnNlcnZhYmxlPFdlYXRoZXJDb25kaXRpb24+IHtcclxuXHRcdGNvbnN0IHF1ZXJ5OiBzdHJpbmcgPSBgJHtsYXR9LCR7bG5nfWA7XHJcblx0XHRjb25zdCBjdXJyZW50VXJsOiBzdHJpbmcgPSBgaHR0cDovL2FwaS5hcGl4dS5jb20vdjEvY3VycmVudC5qc29uP2tleT0ke3RoaXMua2V5fSZxPSR7cXVlcnl9YDtcclxuXHJcblx0XHRyZXR1cm4gdGhpcy5odHRwLmdldChjdXJyZW50VXJsLCB0aGlzLm9wdGlvbnMpXHJcblx0XHRcdC5tYXAoKHJlczogUmVzcG9uc2UpID0+IHJlcy5qc29uKCkpXHJcblx0XHRcdC5tYXAoZGF0YSA9PiB7XHJcblx0XHRcdFx0Y29uc3QgY3VycmVudCA9IGRhdGEuY3VycmVudDtcclxuXHRcdFx0XHRjb25zdCBjb25kaXRpb24gPSBkYXRhLmN1cnJlbnQuY29uZGl0aW9uO1xyXG5cclxuXHRcdFx0XHRyZXR1cm4gbmV3IFdlYXRoZXJDb25kaXRpb24oXHJcblx0XHRcdFx0XHRjdXJyZW50Lmxhc3RfdXBkYXRlZCxcclxuXHRcdFx0XHRcdGN1cnJlbnQudGVtcF9jLFxyXG5cdFx0XHRcdFx0Y3VycmVudC50ZW1wX2YsXHJcblx0XHRcdFx0XHRjdXJyZW50LndpbmRfa3BoLFxyXG5cdFx0XHRcdFx0Y3VycmVudC53aW5kX2RpcixcclxuXHRcdFx0XHRcdGN1cnJlbnQucHJlc3N1cmVfbWIsXHJcblx0XHRcdFx0XHRjdXJyZW50Lmh1bWlkaXR5LFxyXG5cdFx0XHRcdFx0Y3VycmVudC5mZWVsc2xpa2VfYyxcclxuXHRcdFx0XHRcdGN1cnJlbnQuZmVlbHNsaWtlX2YsXHJcblx0XHRcdFx0XHRuZXcgQ29uZGl0aW9uKFxyXG5cdFx0XHRcdFx0XHRjb25kaXRpb24udGV4dCxcclxuXHRcdFx0XHRcdFx0Y29uZGl0aW9uLmljb24sXHJcblx0XHRcdFx0XHRcdGNvbmRpdGlvbi5jb2RlXHJcblx0XHRcdFx0XHQpXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fSlcclxuXHRcdFx0LmNhdGNoKHRoaXMuaGFuZGxlRXJyb3JzKTtcclxuXHR9XHJcblxyXG5cdHByaXZhdGUgaGFuZGxlRXJyb3JzKGVycm9yOiBSZXNwb25zZSkge1xyXG5cdFx0Y29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZXJyb3IpKTtcclxuXHJcblx0XHRyZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhlcnJvcik7XHJcblx0fVxyXG59XHJcblxyXG5cclxuLypcclxuaHR0cHM6Ly93d3cuYXBpeHUuY29tL215L1xyXG5odHRwOi8vYXBpLmFwaXh1LmNvbS92MS9jdXJyZW50Lmpzb24/a2V5PWFhMzI4NWU3NGI4MjRmMjZiYWIxOTU4MTMxNzE1MDYmcT01MCwzMFxyXG5odHRwOi8vYXBpLmFwaXh1LmNvbS92MS9oaXN0b3J5Lmpzb24/a2V5PWFhMzI4NWU3NGI4MjRmMjZiYWIxOTU4MTMxNzE1MDYmcT01MCwzMCZkdD0yMDE3LTA2LTE1XHJcbiAqL1xyXG4iXX0=